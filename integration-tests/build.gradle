buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.8.4"
    }
}

ext {
    slf4jVersion = '1.7.25'
}

dependencies {
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.7'
    
    testCompile group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
    testCompile group: 'org.slf4j', name: 'slf4j-simple', version: "${slf4jVersion}"
}

// Tests should be executed in child projects, not in this project:
test.enabled = false

task copyAmps(type: Copy) {
    dependsOn project(":alfresco-dynamic-extensions-repo").tasks.amp

    from project(":alfresco-dynamic-extensions-repo").amp
    into "${buildDir}/amps"
}

configure(subprojects.findAll { it.name.startsWith("alfresco-") }) {

    task integrationTest(type: Test) {
        testClassesDirs = project(':integration-tests').sourceSets.test.output.classesDirs
        classpath = project(':integration-tests').sourceSets.test.runtimeClasspath
        outputs.upToDateWhen { false }
        
        testLogging {
            showStandardStreams = true
            exceptionFormat = 'full'
        }
    }

    apply plugin: 'docker-compose'

    dockerCompose {
        projectName = "alfresco-dynamic-extensions-${project.name}"
        useComposeFiles = [project.parent.projectDir.toString() + '/src/test/compose/docker-compose.yml']

        removeVolumes = true
        captureContainersOutput = false
        
        buildAdditionalArgs = ['--no-cache']
        
        // Uncomment for quick iterations when developing performance tests
        stopContainers = false

        // expose alfresco/inflow on a random port, comment to use default ports (8080 & 8081)
        environment.put 'COMPOSE_ALFRESCO_TCP_8080', '8080'

        isRequiredBy(project.tasks.integrationTest)
    }

    composeUp.dependsOn project(':integration-tests').tasks.copyAmps
}